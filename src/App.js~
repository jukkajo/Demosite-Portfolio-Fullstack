import React, { useRef, useState } from 'react'
import * as THREE from 'three'

function App() {
  const mountRef = useRef()
  const [hovered, setHovered] = useState(false)

  function onHover(event) {
    setHovered(event.type === 'pointerover')
  }

  function onPointerDown(event) {
    console.log('click')
  }

  function renderScene() {
    const scene = new THREE.Scene()
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)
    const renderer = new THREE.WebGLRenderer()

    renderer.setSize(window.innerWidth, window.innerHeight)
    mountRef.current.appendChild(renderer.domElement)

    const geometry = new THREE.BoxGeometry(1, 1, 1)
    const material = new THREE.MeshBasicMaterial({ color: hovered ? 0xff0000 : 0x00ff00 })
    const cube = new THREE.Mesh(geometry, material)

    scene.add(cube)
    camera.position.z = 5

    const animate = function () {
      requestAnimationFrame(animate)

      cube.rotation.x += 0.01
      cube.rotation.y += 0.01

      renderer.render(scene, camera)
    }

    animate()
  }

  return (
    <div ref={mountRef} style={{ width: '100%', height: '100%' }} onMouseOver={onHover} onMouseOut={onHover} onMouseDown={onPointerDown}>
      <h1 style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>Click me!</h1>
    </div>
  )
}

export default App
